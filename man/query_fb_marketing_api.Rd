% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_fb_marketing_api.R
\name{query_fb_marketing_api}
\alias{query_fb_marketing_api}
\title{Query Facebook Marketing API
\subsection{Location}{
}}
\usage{
query_fb_marketing_api(
  location_unit_type,
  lat_lon = NULL,
  radius = NULL,
  radius_unit = NULL,
  location_keys = NULL,
  location_types = "home",
  locales = NULL,
  interests = NULL,
  behaviors = NULL,
  college_years = NULL,
  education_majors = NULL,
  education_schools = NULL,
  education_statuses = NULL,
  family_statuses = NULL,
  income = NULL,
  industries = NULL,
  work_positions = NULL,
  work_employers = NULL,
  excl_interests = NULL,
  excl_behaviors = NULL,
  excl_college_years = NULL,
  excl_education_majors = NULL,
  excl_education_schools = NULL,
  excl_education_statuses = NULL,
  excl_family_statuses = NULL,
  excl_income = NULL,
  excl_industries = NULL,
  excl_work_positions = NULL,
  excl_work_employers = NULL,
  relationship_statuses = NULL,
  life_events = NULL,
  user_os = NULL,
  wireless_carrier = NULL,
  gender = c(1, 2),
  age_min = 18,
  age_max = 65,
  flex_target = NULL,
  version,
  creation_act,
  token,
  sleep_time = 0.1,
  show_result = F,
  add_param_id_name_vars = F,
  add_query = F,
  add_query_hide_credentials = T
)
}
\arguments{
\item{location_unit_type}{Either \code{"coordinates"} (for buffer around single point) or \code{"country"}
\subsection{If location_unit_type = "coordinates"}{
}}

\item{lat_lon}{Coordinates, c(lat, lon). For example, \code{c(38.90, -77.01)}}

\item{radius}{Radius around coordinate}

\item{radius_unit}{Unit for radius; either \code{"kilometer"} or \code{"mile"}
\subsection{If location_unit_type = "country"}{
}}

\item{location_types}{Either: (1) \code{"home"} (people whose stated location in Facebook profile "current city" is in an area, valided by IP), (2) \code{"recent"} (people whose recent location is in the selected area, determined by mobile device data), (3) \code{"travel_in"} (people whose most recent location is in selected area and more than 100 miles from stated current city), (4) \code{c("home", "recent")} (for people in either category)}

\item{locales}{Locales ID.}

\item{education_statuses}{Education status IDs. If multiple, uses \code{OR} condition; for example, \code{education_statuses = c(9,10)} will yeild those who report to have either a Master degree or professional degree. See \code{education_statuses} in the \href{https://developers.facebook.com/docs/marketing-api/audiences/reference/advanced-targeting}{Advanced Targeting Documentation} to see education status options.}

\item{family_statuses}{Vector of family status IDs. If multiple, uses \code{OR} condition; for example, \code{family_statuses = c(6023080302983, 6023005681983)} targets users who are parents with preteens or parents with teenagers. Use \code{get_fb_parameters(type = "demographics")} to get dataframe with IDs and descriptions.}

\item{income}{Vector of income IDs. If multiple, uses \code{OR} condition; for example, \code{income = c(6107813553183, 6107813554583)} targets users with a household income in the top 10\%-25\% or 25\%-50\% of ZIP codes (US). Use \code{get_fb_parameters(type = "demographics")} to get dataframe with IDs and descriptions.}

\item{industries}{Vector of industries IDs. If multiple, uses \code{OR} condition; for example, \code{industries = c(6008888980183, 6008888972183)} targets users who work in sales or legal services. Use \code{get_fb_parameters(type = "demographics")} to get dataframe with IDs and descriptions.}

\item{relationship_statuses}{Vector of relationship status IDs. If multiple, uses \code{OR} condition; for example, \code{relationship_statuses = c(3,4)} targets those who are married or engaged. See \code{relationship_statuses} in the \href{https://developers.facebook.com/docs/marketing-api/audiences/reference/advanced-targeting}{Advanced Targeting Documentation} to see relationship status ID options with descriptions.}

\item{life_events}{Vector of life event IDs. If multiple, uses \code{OR} condition; for example, \code{life_events = c(6005149512172, 6005149512172)} targets users who recently moved or are in a new job. Use \code{get_fb_parameters(type = "demographics")} to get dataframe with IDs and descriptions.}

\item{user_os}{User operating systems. If multiple, uses \code{OR} condition; for example \verb{user_os = ['iOS', 'Android']} targets those that use either an iOS or Android OS. See \code{user_os} in the \href{https://developers.facebook.com/docs/marketing-api/audiences/reference/advanced-targeting}{Advanced Targeting Documentation} for additional details.}

\item{wireless_carrier}{Wireless carriet. If set to \code{Wifi}, then targets those connecting via a Wifi network. See \code{wireless_carrier} in the \href{https://developers.facebook.com/docs/marketing-api/audiences/reference/advanced-targeting}{Advanced Targeting Documentation} for additional details.}

\item{gender}{Genders to target; 1 targets males and 2 targets females Default is both. See \code{gender} in the \href{https://developers.facebook.com/docs/marketing-api/audiences/reference/basic-targeting#demographics}{Basic Targeting Documentation}.}

\item{age_min}{Minimum age. Default is 18. See \code{age_min} in the \href{https://developers.facebook.com/docs/marketing-api/audiences/reference/basic-targeting#demographics}{Basic Targeting Documentation}.}

\item{age_max}{Maximum age. Default is 65. See \code{age_max} in the \href{https://developers.facebook.com/docs/marketing-api/audiences/reference/basic-targeting#demographics}{Basic Targeting Documentation}.
\subsection{Credentials}{
}}

\item{version}{API version. e.g., "v14.0"}

\item{creation_act}{Facebook creation act}

\item{token}{Facebook API token
\subsection{Scraping parameters}{
}}

\item{sleep_time}{words}

\item{show_result}{words
\subsection{Return query text as variable in returned dataframe}{
}}

\item{add_query}{If \code{TRUE}, add query text as variable in returned dataframe}

\item{add_query_hide_credentials}{If \code{TRUE} (and \code{add_query} is \code{TRUE}), hide the \code{creation_act} and \code{token} from the query text returned in the dataframe}

\item{country_code}{Country ISO2; for example, \code{"US"}.
\subsection{Other location??}{
}}

\item{behavior}{Vector of behavior IDs. If multiple, uses \code{OR} condition; for example, \code{behavior = c(6002714895372, 6008297697383)} will target users who are either frequent travelers or returned from travels 2 weeks ago. Use \code{get_fb_parameters(type = "behaviors")} to get dataframe with IDs and descriptions.}

\item{interest}{Vector of interest IDs. If multiple, uses \code{OR} condition; for example, \code{interest = c(6003349442621, 6003139266461)} will target users who are interested in either entertainment or movies. Use \code{get_fb_parameters(type = "interests")} to get dataframe with IDs and descriptions.}
}
\value{
Dataframe that includes (1) daily and monthly active users and (2) parameter values
}
\description{
Query Facebook Marketing API
\subsection{Location}{
}
}
\details{
FOR LOOP, USE LISTS. BUT JUST CAN'T LIST ON LOCATION TYPE.
}
\seealso{
\code{\link[=get_fb_parameters]{get_fb_parameters()}} To get IDs and descriptions for behaviors, demographics, interests, and locales.
}
